fn main() -> anyhow::Result<()> {
    AppShared::write()?;

    Ok(())
}

struct AppShared;

impl AppShared {
    const DOMAIN: &'static str = std::env!("DOMAIN");
    const PORT: &'static str = std::env!("PORT");
    const DATABASE_URL: &'static str = std::env!("DATABASE_URL");
    const SESSION_SECRET: &'static str = std::env!("SESSION_SECRET");

    fn write() -> anyhow::Result<()> {
        use std::io::Write;

        let mut file = std::fs::File::create("src/shared/app.rs")?;

        writeln!(
            file,
            "// ! DO NOT MODIFY! This file is automatically generated by build.rs"
        )?;
        writeln!(file)?;
        writeln!(file, "pub const DOMAIN: &str = {:?};", Self::DOMAIN)?;
        writeln!(file, "pub const PORT: u16 = {};", Self::PORT)?;
        writeln!(
            file,
            "pub const DATABASE_URL: &str = {:?};",
            Self::DATABASE_URL
        )?;
        writeln!(
            file,
            "pub const SESSION_SECRET: &str = {:?};",
            Self::SESSION_SECRET
        )?;

        Ok(())
    }
}
