fn main() -> anyhow::Result<()> {
    ModShared::write()?;
    ResourceShared::write()?;

    Ok(())
}

struct ModShared;

impl ModShared {
    fn write() -> anyhow::Result<()> {
        use std::io::Write;

        let mut file = std::fs::File::create("src/shared/mod.rs")?;

        writeln!(
            file,
            "// ! DO NOT MODIFY! This file is automatically generated by build.rs"
        )?;
        writeln!(file)?;
        writeln!(file, "pub mod app;")?;
        writeln!(file)?;
        writeln!(file, "pub use app::*;")?;

        Ok(())
    }
}

struct ResourceShared;

impl ResourceShared {
    const USER_DEFAULT_IMAGE: &'static str = std::env!("USER_DEFAULT_IMAGE");

    fn write() -> anyhow::Result<()> {
        use std::io::Write;

        let mut file = std::fs::File::create("src/shared/app.rs")?;

        writeln!(
            file,
            "// ! DO NOT MODIFY! This file is automatically generated by build.rs"
        )?;
        writeln!(file)?;
        writeln!(
            file,
            "pub const USER_DEFAULT_IMAGE: &str = {:?};",
            Self::USER_DEFAULT_IMAGE
        )?;

        Ok(())
    }
}
