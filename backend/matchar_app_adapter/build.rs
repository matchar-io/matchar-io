fn main() -> anyhow::Result<()> {
    AuthShared::write()?;

    Ok(())
}

struct AuthShared;

impl AuthShared {
    const GOOGLE_CLIENT_ID: &'static str = std::env!("GOOGLE_CLIENT_ID");
    const GOOGLE_CLIENT_SECRET: &'static str = std::env!("GOOGLE_CLIENT_SECRET");
    const GOOGLE_REDIRECT_URL: &'static str = std::env!("GOOGLE_REDIRECT_URL");

    fn write() -> anyhow::Result<()> {
        use std::io::Write;

        let mut file = std::fs::File::create("src/shared/auth.rs")?;

        writeln!(
            file,
            "// ! DO NOT MODIFY! This file is automatically generated by build.rs"
        )?;
        writeln!(file)?;
        writeln!(
            file,
            "pub const GOOGLE_CLIENT_ID: &str = \"{}\";",
            Self::GOOGLE_CLIENT_ID
        )?;
        writeln!(
            file,
            "pub const GOOGLE_CLIENT_SECRET: &str = \"{}\";",
            Self::GOOGLE_CLIENT_SECRET
        )?;
        writeln!(
            file,
            "pub const GOOGLE_REDIRECT_URL: &str = \"{}\";",
            Self::GOOGLE_REDIRECT_URL
        )?;

        Ok(())
    }
}
